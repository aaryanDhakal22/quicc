user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    include /etc/nginx/conf.d/*.conf;

    server {
        listen       80;
        server_name  localhost;

        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
        }

        location /api/ {
            proxy_pass http://127.0.0.1:8000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}

# Notes 


# In this particular code snippet, there are two lines that use the `proxy_set_header` directive. This directive is used to set HTTP headers in the requests that Nginx forwards to a backend server.

# Let's break down the code:

# ```properties
# proxy_set_header Host $host;
# ```

# This line sets the `Host` header in the forwarded request to the value of the `$host` variable. The `$host` variable represents the hostname of the server that received the original request.

# ```properties
# proxy_set_header X-Real-IP $remote_addr;
# ```

# This line sets the `X-Real-IP` header in the forwarded request to the value of the `$remote_addr` variable. The `$remote_addr` variable represents the IP address of the client that made the original request.

# By setting these headers, Nginx can pass along important information to the backend server, which can then use it for various purposes, such as logging or request processing.

# It's worth noting that this code snippet is written in the Nginx configuration language, which is different from programming languages like JavaScript or Python. Nginx configuration files have their own syntax and directives that are specific to configuring the Nginx server.